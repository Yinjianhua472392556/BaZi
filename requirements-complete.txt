# 八字小程序后端完整依赖配置
# 生成时间: 2025-09-18
# Python版本要求: >=3.8

# ================================
# 核心Web框架
# ================================
fastapi==0.104.1                    # 现代异步Web框架
uvicorn[standard]==0.24.0            # ASGI服务器，支持热重载
python-multipart==0.0.6             # 文件上传和表单数据处理

# ================================
# 数据验证和序列化
# ================================
pydantic==2.5.0                     # 数据验证和设置管理
pydantic-settings==2.1.0            # 配置管理
email-validator==2.1.0              # 邮箱格式验证

# ================================
# HTTP客户端和网络
# ================================
requests==2.31.0                    # HTTP客户端库
httpx==0.25.2                       # 异步HTTP客户端
aiohttp==3.9.1                      # 异步HTTP客户端（备选）

# ================================
# 日期时间处理
# ================================
python-dateutil==2.8.2              # 强大的日期解析库
pytz==2023.3                        # 时区处理
arrow==1.3.0                        # 人性化的日期时间库

# ================================
# 中国传统历法计算（开源高质量库）
# ================================
sxtwl==1.1.3                        # 寿星天文历，最精确的农历算法
zhdate==0.1                         # 简单易用的农历转换
chinese-calendar==1.8.0             # 中国日历处理，包含节假日
lunardate==0.2.0                    # 农历日期处理
cnlunar==0.1.9                      # 中国农历库，支持节气计算

# ================================
# 数据库和ORM
# ================================
sqlalchemy==2.0.23                  # SQL工具包和ORM
alembic==1.13.1                     # 数据库迁移工具
databases==0.8.0                    # 异步数据库支持
asyncpg==0.29.0                     # PostgreSQL异步驱动
aiosqlite==0.19.0                   # SQLite异步驱动

# ================================
# 缓存和消息队列
# ================================
redis==5.0.1                        # Redis客户端
aioredis==2.0.1                     # 异步Redis客户端
python-memcached==1.59              # Memcached客户端

# ================================
# 身份验证和安全
# ================================
python-jose[cryptography]==3.3.0    # JWT处理
passlib[bcrypt]==1.7.4              # 密码哈希
cryptography==41.0.7                # 加密库
python-multipart==0.0.6             # 多部分表单数据

# ================================
# 文件处理
# ================================
aiofiles==23.2.1                    # 异步文件操作
Pillow==10.1.0                      # 图像处理
python-magic==0.4.27                # 文件类型检测

# ================================
# AI和机器学习
# ================================
openai==1.3.8                       # OpenAI API客户端
anthropic==0.7.8                    # Anthropic Claude API
dashscope==1.14.1                   # 阿里云通义千问API
transformers==4.36.2                # Hugging Face模型库（本地AI备选）
torch==2.1.1                        # PyTorch（本地AI支持）
sentence-transformers==2.2.2        # 文本嵌入模型

# ================================
# 内容过滤和审核
# ================================
better-profanity==0.7.0             # 敏感词过滤
profanity-check==1.0.3              # 内容审核
textblob==0.17.1                    # 文本情感分析

# ================================
# 数据处理和分析
# ================================
pandas==2.1.4                       # 数据分析
numpy==1.26.2                       # 数值计算
scipy==1.11.4                       # 科学计算

# ================================
# 配置和环境管理
# ================================
python-dotenv==1.0.0                # 环境变量管理
pydantic-settings==2.1.0            # 设置管理
click==8.1.7                        # 命令行接口

# ================================
# 日志和监控
# ================================
structlog==23.2.0                   # 结构化日志
python-json-logger==2.0.7           # JSON格式日志
sentry-sdk==1.38.0                  # 错误监控
prometheus-client==0.19.0           # 指标监控

# ================================
# 开发和测试工具
# ================================
pytest==7.4.3                       # 测试框架
pytest-asyncio==0.21.1              # 异步测试支持
pytest-cov==4.1.0                   # 测试覆盖率
factory-boy==3.3.0                  # 测试数据工厂
faker==20.1.0                       # 假数据生成

# ================================
# 代码质量工具
# ================================
black==23.11.0                      # 代码格式化
isort==5.12.0                       # 导入排序
flake8==6.1.0                       # 代码检查
mypy==1.7.1                         # 类型检查
pre-commit==3.6.0                   # Git钩子

# ================================
# 性能优化
# ================================
gunicorn==21.2.0                    # WSGI服务器
gevent==23.9.1                      # 异步网络库
ujson==5.8.0                        # 快速JSON处理
orjson==3.9.10                      # 更快的JSON库

# ================================
# 部署和运维
# ================================
docker==6.1.3                       # Docker客户端
fabric==3.2.2                       # 部署自动化
ansible==8.7.0                      # 配置管理

# ================================
# 微信小程序API支持
# ================================
wechatpy==1.8.18                    # 微信API SDK
xmltodict==0.13.0                   # XML处理

# ================================
# 开源替代方案和工具
# ================================
# 本地LLM支持
ollama-python==0.1.7                # Ollama Python客户端
llama-cpp-python==0.2.11            # Llama.cpp Python绑定

# JSON Schema和API文档
jsonschema==4.20.0                  # JSON Schema验证
apispec==6.3.0                      # API文档生成

# 任务队列（如需要）
celery==5.3.4                       # 分布式任务队列
kombu==5.3.4                        # 消息传递库

# 地理位置处理（如需要地区功能）
geopy==2.4.1                        # 地理编码
pyproj==3.6.1                       # 坐标系统转换

# ================================
# 开发环境专用依赖
# ================================
# 安装方式: pip install -r requirements-complete.txt
# 开发环境额外安装: pip install -r requirements-dev.txt

# ================================
# 版本锁定说明
# ================================
# 所有版本都已经过兼容性测试
# 如需升级版本，请先在开发环境测试
# 关键依赖（fastapi, pydantic, sqlalchemy）锁定主版本
# AI相关库保持较新版本以获得最佳性能

# ================================
# 安装建议
# ================================
# 1. 创建虚拟环境: python -m venv venv
# 2. 激活虚拟环境: source venv/bin/activate (Linux/Mac) 或 venv\Scripts\activate (Windows)
# 3. 升级pip: pip install --upgrade pip
# 4. 安装依赖: pip install -r requirements-complete.txt
# 5. 如果安装失败，可以分别安装不同模块的依赖

# ================================
# 生产环境优化建议
# ================================
# 1. 移除开发工具依赖（pytest, black等）
# 2. 根据实际需要选择AI服务商依赖
# 3. 考虑使用更轻量的镜像基础
# 4. 启用依赖缓存加速构建
